# Copyright (c) 2021-2022, Arm Limited.
#
# SPDX-License-Identifier: MIT

# Apply feature specific config
# The `meta-ewaol-distro/classes/ewaol-distro-features.bbclass` enables
# conditional inclusion of `.inc` files to enable specific features based
# on the values in `DISTRO_FEATURES`.
# The `meta-cassini/meta-cassini-distro/classes/cassini-distro-features.bbclass`
# follows same concept to enable specific features. Therefore, we need to
# append `ewaol-distro-features.bbclass` before
# `cassini-distro-features.bbclass` to `USER_CLASSES`.
# DO NOT MODIFY the order of `USER_CLASSES:append` and `require`.
USER_CLASSES:append = " ewaol-distro-features"

# This is an unavoidable hack to include cassini.conf. Currently,
# meta-cassini distro is part of meta-ewaol and CI building ewaol
# clones meta-ewaol into layers folder and builds from there.
# For user builds, layers folder is under meta-ewaol. Due to this,
# path for cassini.conf need to be adjusted based on the build
# environment. This is a temporary hack and won't be needed when
# meta-cassini is separated from meta-ewaol.
CASSINI_CONFIG_FILE_REL_PATH := "\
${@ "../.." \
    if (d.getVar('BBLAYERS').find("layers/meta-ewaol") == -1) \
    else "../meta-ewaol"}"

require ${COREBASE}/${CASSINI_CONFIG_FILE_REL_PATH}/meta-cassini/meta-cassini-distro/conf/distro/cassini.conf

# EWAOL distro is based on Cassini distro and we need to keep cassini in
# OVERRIDES.
OVERRIDES:append = ":cassini"

# Introduce the EWAOL Yocto Distro
DISTRO = "ewaol"
DISTRO_NAME = "EWAOL (Edge Workload Abstraction and Orchestration Layer)"
DISTRO_VERSION = "v1.0"

# systemd as the init system
INIT_MANAGER = "systemd"
DISTRO_FEATURES:append = " virtualization ipv6 seccomp k3s"

# rpm as the package management system
PACKAGE_CLASSES ?= "package_rpm"

PREFERRED_PROVIDER_virtual/runc = "runc-opencontainers"
PREFERRED_PROVIDER_virtual/docker = "docker-ce"

# These classes produce warnings if there are any missing kernel configurations
# that are required by their target packages
KERNEL_CLASSES:append = " containers_kernelcfg_check k3s_kernelcfg_check"

# This variable is used to include ewaol distro feature specific settings
# e.g. for "ewaol-virtualization"
EWAOL_OVERRIDES ??= ""

# Default user account names and default admin group name
CASSINI_ADMIN_ACCOUNT = "ewaol"
EWAOL_TEST_ACCOUNT = "${@ d.getVar('CASSINI_TEST_ACCOUNT')}"
EWAOL_ADMIN_GROUP = "${@ d.getVar('CASSINI_ADMIN_GROUP')}"

# Select whether or not to generate the filesystem able to run in any aarch64
# platform. If EWAOL_GENERIC_ARM64_FILESYSTEM is "1", armv8a-crc DEFAULTTUNE
# will be used otherwise the one set by the MACHINE conf will be selected.
EWAOL_GENERIC_ARM64_FILESYSTEM ?= "1"
EWAOL_GENERIC_ARM64_DEFAULTTUNE ?= "armv8a-crc"

# Use generic DEFAULTTUNE if generic filestystem enabled otherwise preserve
# DEFAULTTUNE value.
DEFAULTTUNE:aarch64 := "\
${@ d.getVar('EWAOL_GENERIC_ARM64_DEFAULTTUNE', False) \
    if (bb.utils.to_boolean(d.getVar('EWAOL_GENERIC_ARM64_FILESYSTEM', \
                                     True), False)) \
    else d.getVar('DEFAULTTUNE', False)}"
